{"version":3,"sources":["components/App.js","index.js"],"names":["useStyles","makeStyles","theme","modal","position","width","padding","backgroundColor","palette","background","paper","border","boxShadow","spacing","top","left","transform","icons","cursor","inputMaterial","App","styles","useState","data","setData","createModal","setCreateModal","name","setName","birthdate","setBirthdate","getRequest","a","axios","get","then","response","openCloseCreateModal","useEffect","createBody","className","TextField","label","onChange","e","currentTarget","value","console","log","align","Button","color","onClick","fetch","method","headers","body","JSON","stringify","json","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","user","Edit","Delete","id","Modal","open","onClose","ReactDOM","render","document","getElementById"],"mappings":"uWAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,QAAS,KACTC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,OAAQ,iBACRC,UAAWV,EAAMW,QAAQ,EAAG,EAAG,GAC/BC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAEbC,MAAO,CACLC,OAAQ,WAEVC,cAAe,CACbd,MAAO,YAwIIe,MApIf,WAEE,IAAMC,EAASrB,IAEf,EAAwBsB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAQA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAkCN,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAwBMC,EAAU,uCAAG,sBAAAC,EAAA,sEACXC,IAAMC,IA9DA,2CA+DXC,MAAK,SAAAC,GACJZ,EAAQY,EAASb,SAHF,2CAAH,qDA6BVc,EAAuB,WAC3BX,GAAgBD,IAGlBa,oBAAS,sBAAC,sBAAAN,EAAA,sEACFD,IADE,2CAER,IAEF,IAAMQ,EACJ,sBAAKC,UAAWnB,EAAOlB,MAAvB,UACE,qDACA,cAACsC,EAAA,EAAD,CAAWD,UAAWnB,EAAOF,cAAeuB,MAAM,SAASC,SApD1C,SAACC,GACpBhB,EAAQgB,EAAEC,cAAcC,OACxBC,QAAQC,IAAIrB,MAmDV,uBACA,cAACc,EAAA,EAAD,CAAWD,UAAWnB,EAAOF,cAAeuB,MAAM,sBAAsBC,SAjDtD,SAACC,GACrBd,EAAac,EAAEC,cAAcC,OAC7BC,QAAQC,IAAInB,MAgDV,uBAAK,uBACL,sBAAKoB,MAAM,QAAX,UACE,cAACC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QA7BZ,SAACzB,EAAME,GACvB,OAAOwB,MAAM,0CAA2C,CACtDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAC/B,OAAME,gBAE3BM,MAAK,SAACC,GAAD,OAAcA,EAASuB,UAC5BxB,MAAK,SAACZ,GAAD,OAAUA,MAoBd,uBACA,cAAC2B,EAAA,EAAD,CAAQE,QAASf,EAAjB,4BAON,OACE,sBAAKG,UAAU,MAAf,UACE,uBACA,cAACU,EAAA,EAAD,CAAQE,QAASf,EAAjB,iCACA,uBAAK,uBACF,cAACuB,EAAA,EAAD,UACF,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACC,cAACC,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,kCACA,cAACA,EAAA,EAAD,4BAIH,cAACC,EAAA,EAAD,UACG1C,EAAK2C,KAAI,SAAAC,GAAI,OACZ,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYG,EAAKxC,OACjB,cAACqC,EAAA,EAAD,UAAYG,EAAKtC,YACjB,eAACmC,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,IADF,eAGE,cAACC,EAAA,EAAD,SANWF,EAAKG,cAc5B,cAACC,EAAA,EAAD,CACAC,KAAQ/C,EACRgD,QAAWpC,EAFX,SAGGE,QCvJRmC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf13fab0.chunk.js","sourcesContent":["import React from 'react';\nimport  { useEffect, useState } from 'react';\nimport '../App.css';\nimport axios from 'axios'; \nimport {makeStyles} from '@material-ui/core/styles';\nimport {Table, TableHead, TableCell, TableBody, TableRow, TableContainer, Modal, Button, TextField, StylesProvider} from '@material-ui/core';\nimport {Edit, Delete} from '@material-ui/icons';\n\nconst baseUrl = 'http://hello-world.innocv.com/api/user/'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    position: 'absolute',\n    width: 400, \n    padding: '3%',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.spacing(2, 4, 3),\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  },\n  icons: {\n    cursor: 'pointer'\n  },\n  inputMaterial: {\n    width: '100%'\n  }\n}))\n\nfunction App() {\n\n  const styles = useStyles();\n\n  const [data, setData] = useState([]);\n\n  const [createModal, setCreateModal] = useState(false);\n\n  //Hook para usuario Seleccionado\n  // const [selectedUser, setSelectedUser] = useState({\n  //   name: '',\n  //   birthdate: '',\n  // })\n\n  const [name, setName] = useState(\"\");\n  const [birthdate, setBirthdate] = useState(\"\");\n\n\n  // const handleChange = e => {\n  //   const {name, value} = e.target;\n  //   setSelectedUser(prevState => ({\n  //     ...prevState, \n  //     [name]: value\n  //   }))\n  //   console.log(selectedUser);\n  // }\n\n  const handleChange = (e) => {\n    setName(e.currentTarget.value)\n    console.log(name);\n  }\n\n  const handleChange2 = (e) => {\n    setBirthdate(e.currentTarget.value)\n    console.log(birthdate);\n\n  }\n\n\n  const getRequest = async () => {\n    await axios.get(baseUrl)\n    .then(response => {\n      setData(response.data);\n    })\n  } \n\n  // const postRequest = async () => {\n  //   await axios.post(baseUrl, selectedUser)\n  //   .then(response => {\n  //     setData(data.concat(response.data))\n  //     console.log(data);\n  //     openCloseCreateModal()\n  //   })\n  // }\n\nconst postRequest = (name, birthdate) => {\n    return fetch(`https://hello-world.innocv.com/api/user`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({name, birthdate}),\n    })\n      .then((response) => response.json())\n      .then((data) => data);\n  };\n\n\n  const openCloseCreateModal = () => {\n    setCreateModal(!createModal);\n  }\n\n  useEffect(async() => {\n    await getRequest()\n  },[])\n\n  const createBody = (\n    <div className={styles.modal}>\n      <h3>Crear Nuevo Usuario</h3>\n      <TextField className={styles.inputMaterial} label=\"Nombre\" onChange={handleChange} />\n      <br/>\n      <TextField className={styles.inputMaterial} label=\"Fecha de Nacimiento\" onChange={handleChange2} />\n      <br/><br/>\n      <div align=\"right\">\n        <Button color=\"primary\" onClick={postRequest} >AÃ±adir</Button>\n        <Button onClick={openCloseCreateModal}>Cancelar</Button>\n\n      </div>\n\n    </div>\n  )\n\n  return (\n    <div className=\"App\">\n      <br/>\n      <Button onClick={openCloseCreateModal}>Crear nuevo usuario</Button>\n      <br/><br/>\n         <TableContainer>\n       <Table>\n         <TableHead>\n           <TableRow>\n            <TableCell>Nombre</TableCell>\n            <TableCell>Fecha de nacimiento</TableCell>\n            <TableCell>Opciones</TableCell>\n            </TableRow>\n         </TableHead>\n\n         <TableBody>\n           {data.map(user=>(\n             <TableRow key={user.id}>\n               <TableCell>{user.name}</TableCell>\n               <TableCell>{user.birthdate}</TableCell>\n               <TableCell>\n                 <Edit/>\n                 &nbsp;&nbsp;&nbsp;\n                 <Delete/>\n               </TableCell>\n             </TableRow>\n           ))}\n         </TableBody>\n       </Table>\n     </TableContainer>\n\n     <Modal\n     open = {createModal} \n     onClose = {openCloseCreateModal}>\n       {createBody}   \n    </Modal>     \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}